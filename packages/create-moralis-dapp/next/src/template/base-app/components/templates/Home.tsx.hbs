{{!-- Evm Template --}}
{{#if isEvm}}
import { useEvmWalletTokenBalances } from '@moralisweb3/react';
import React from 'react';
import { Default } from '../layouts';
import styles from './Home.module.css';
{{#if hasWagmi}} 
    import { useAccount } from 'wagmi';
{{/if}}

export default function Home() {
  const [evmAddress, setEvmAddress] = React.useState('0x75e3e9c92162e62000425c98769965a76c2e387a');
  const {
    data: evmBalance,
    refetch: fetchErc20,
    error: errorErc20,
  } = useEvmWalletTokenBalances({ address: evmAddress }, { enabled: false });
  {{#if hasWagmi}} 
    const { address } = useAccount();

    React.useEffect(() => {
      if (!address) {
        return;
      }
      setEvmAddress(address);
    }, [address]);
  {{/if}}

  return (
    <Default>
      <div className={styles.content}>
        <h4>Get Ethereum Token Balance</h4>
        <div className={styles.address_input}>
          <input name="evmAddress" value={evmAddress} onChange={(e) => setEvmAddress(e.target.value)} />
          <button className={styles.search_btn} onClick={() => fetchErc20()}>
            ðŸ”Ž
          </button>
        </div>
        <h4>Result:</h4>
        {errorErc20 ? (
          <pre data-out>{JSON.stringify(errorErc20)}</pre>
        ) : (
          <pre data-out>{evmBalance ? JSON.stringify(evmBalance, null, 2) : 'Click the "ðŸ”Ž" button to fetch data'}</pre>
        )}
      </div>
    </Default>
  );
}
{{/if}}

{{!-- Solana Template --}}
{{#if isSolana}}
import { useSolPortfolio } from '@moralisweb3/react';
import { useWallet } from '@solana/wallet-adapter-react';
import { WalletMultiButton } from '@solana/wallet-adapter-react-ui';
import { useEffect, useState } from 'react';
import './App.css';

export default function App() {
    return (
        <>
            <Header />
            <Content />
            <Footer />
        </>
    );
}

function Content() {
    return (
        <div className="content">
            <SolDataDemo />
        </div>
    );
}

function SolDataDemo() {
    const [solAddress, setSolAddress] = useState('BWeBmN8zYDXgx2tnGj72cA533GZEWAVeqR9Eu29txaen');
    const { publicKey } = useWallet();
    const { data: solBalance, refetch: fetchSolPortfolio, error: errorSolPortfolio } = useSolPortfolio({ address: solAddress }, { enabled: false });
    console.log('publicKey: ', publicKey?.toString());

    useEffect(() => {
        if (!publicKey) {
            return;
        }
        setSolAddress(publicKey?.toString());
    }, [publicKey]);

    return (
        <>
            <h4>Get Ethereum Token Balance</h4>
            <div className="address-input">
                <input name="solAddress" value={solAddress} onChange={(e) => setSolAddress(e.target.value)} />
                <button className="search_btn" onClick={() => fetchSolPortfolio()}>
                    ðŸ”Ž
                </button>
            </div>
            <h4>Result:</h4>
            {errorSolPortfolio ? (
                <pre data-out>{JSON.stringify(errorSolPortfolio)}</pre>
            ) : (
                <pre data-out>{solBalance ? JSON.stringify(solBalance, null, 2) : 'Click the "ðŸ”Ž" button to fetch data'}</pre>
            )}
        </>
    );
}

function Footer() {
    return (
        <footer>
            <p>
                ðŸ™‹ You have questions? Ask them on the{' '}
                <a href="https://forum.moralis.io/" target="_blank">
                    Moralis forum
                </a>
            </p>
            <p>
                ðŸ“– Read more about{' '}
                <a href="https://moralis.io/" target="_blank">
                    Moralis
                </a>
            </p>
        </footer>
    );
}

function Header() {
    return (
        <header className="header">
            <a href="https://moralis.io" target="_blank">
                <img src="/moralisBig.svg" className="logo" alt="Moralis logo" />
            </a>
            <div>
                <WalletMultiButton />
            </div>
        </header>
    );
}

{{/if}}